class Solution {
    public int mincostTickets(int[] days, int[] costs) {
        int n = days.length;
        int[] dp = new int[n];
        dp[0] = Math.min(costs[0], Math.min(costs[1], costs[2]));

        for (int i = 1; i < n; i++) {
            // Cost with 1-day pass
            int cost1 = costs[0] + dp[i - 1];

            // Cost with 7-day pass
            int j = i;
            while (j > 0 && days[j - 1] >= days[i] - 6) {
                j--;
            }
            int cost7 = costs[1] + (j > 0 ? dp[j - 1] : 0);

            // Cost with 30-day pass
            j = i;
            while (j > 0 && days[j - 1] >= days[i] - 29) {
                j--;
            }
            int cost30 = costs[2] + (j > 0 ? dp[j - 1] : 0);

            dp[i] = Math.min(cost1, Math.min(cost7, cost30));
        }

        return dp[n - 1];
    }
}
